/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as EnvRouteImport } from './routes/env'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TodoIndexRouteImport } from './routes/todo.index'
import { Route as TodoIdRouteImport } from './routes/todo.$id'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo/tanstack-query'
import { Route as DemoStorybookRouteImport } from './routes/demo/storybook'
import { Route as DemoFormSimpleRouteImport } from './routes/demo/form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo/form.address'

const EnvRoute = EnvRouteImport.update({
  id: '/env',
  path: '/env',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoIndexRoute = TodoIndexRouteImport.update({
  id: '/todo/',
  path: '/todo/',
  getParentRoute: () => rootRouteImport,
} as any)
const TodoIdRoute = TodoIdRouteImport.update({
  id: '/todo/$id',
  path: '/todo/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStorybookRoute = DemoStorybookRouteImport.update({
  id: '/demo/storybook',
  path: '/demo/storybook',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/env': typeof EnvRoute
  '/demo/storybook': typeof DemoStorybookRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/todo/$id': typeof TodoIdRoute
  '/todo': typeof TodoIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/env': typeof EnvRoute
  '/demo/storybook': typeof DemoStorybookRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/todo/$id': typeof TodoIdRoute
  '/todo': typeof TodoIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/env': typeof EnvRoute
  '/demo/storybook': typeof DemoStorybookRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/todo/$id': typeof TodoIdRoute
  '/todo/': typeof TodoIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/env'
    | '/demo/storybook'
    | '/demo/tanstack-query'
    | '/todo/$id'
    | '/todo'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/env'
    | '/demo/storybook'
    | '/demo/tanstack-query'
    | '/todo/$id'
    | '/todo'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/'
    | '/env'
    | '/demo/storybook'
    | '/demo/tanstack-query'
    | '/todo/$id'
    | '/todo/'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EnvRoute: typeof EnvRoute
  DemoStorybookRoute: typeof DemoStorybookRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  TodoIdRoute: typeof TodoIdRoute
  TodoIndexRoute: typeof TodoIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/env': {
      id: '/env'
      path: '/env'
      fullPath: '/env'
      preLoaderRoute: typeof EnvRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/': {
      id: '/todo/'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todo/$id': {
      id: '/todo/$id'
      path: '/todo/$id'
      fullPath: '/todo/$id'
      preLoaderRoute: typeof TodoIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/storybook': {
      id: '/demo/storybook'
      path: '/demo/storybook'
      fullPath: '/demo/storybook'
      preLoaderRoute: typeof DemoStorybookRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EnvRoute: EnvRoute,
  DemoStorybookRoute: DemoStorybookRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  TodoIdRoute: TodoIdRoute,
  TodoIndexRoute: TodoIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
